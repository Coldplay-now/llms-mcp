# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-debug.log

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially important for library packages to ensure reproducible builds.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-your-repo
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   https://pdm.fming.dev/latest/usage/advanced/#lockfile-version-control
#pdm.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
#  JetBrains specific template is maintained at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more native experience use the "Ignore Files"
#  plugin for JetBrains IDEs, see: https://plugins.jetbrains.com/plugin/7495--ignore

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares

# Local background documentation (not for publishing)
background.md
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

# End of https://www.toptal.com/developers/gitignore/api/python

# Project specific ignores
llms.txt  # 自动生成的文档，不需要版本控制
*.log      # 日志文件

# MCP server temporary files
.mcp_cache/

# Local development configuration
local_settings.py

# Test output
test_output/

# Benchmark results
benchmarks/

# Coverage reports
.coverage
htmlcov/

# Virtual environments (already included above, but explicit)
.venv/
venv/

# IDE specific files (already included above, but explicit)
.vscode/
.idea/
*.swp
*.swo
*~

# Package lock files (choose one based on your package manager)
# Pipfile.lock  # Uncomment if using pipenv
# poetry.lock   # Uncomment if using poetry
# pdm.lock      # Uncomment if using pdm

# Build artifacts
build/
dist/
*.egg-info/

# Documentation build output
docs/_build/

# Jupyter notebooks checkpoints
.ipynb_checkpoints/

# PyTest cache
.pytest_cache/

# MyPy cache
.mypy_cache/

# Database files
*.db
*.sqlite3
*.sqlite

# Environment variables
.env
.env.local
.env.*.local

# Local development data
data/local/

# Backup files
*.bak
*.backup

# Temporary files
tmp/
temp/

# Large files
*.large

# Sensitive data
secrets.py
credentials.json
*.key
*.pem
*.crt

# End of .gitignore